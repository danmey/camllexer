COMMENT "(* COMMENT, SYMBOL, LIDENT, INT, BLANKS, NEWLINE *)"
NEWLINE "\n"
LIDENT "let"
BLANKS " "
LIDENT "x"
BLANKS "  "
SYMBOL "="
BLANKS "  "
INT "42"
NEWLINE "\n"
COMMENT "(* UIDENT, PSYMBOL, INT32, INT64, NATIVEINT, CHAR, STRING *)"
NEWLINE "\n"
LIDENT "let"
BLANKS " "
SYMBOL "("
UIDENT "Some"
BLANKS " "
PSYMBOL "" "+" ""
SYMBOL ")"
BLANKS " "
SYMBOL "="
BLANKS " "
UIDENT "Some"
BLANKS " "
SYMBOL "("
INT32 "42"
SYMBOL ","
BLANKS " "
INT64 "42"
SYMBOL ","
BLANKS " "
NATIVEINT "42"
SYMBOL ","
BLANKS " "
FLOAT "4.2"
SYMBOL ","
BLANKS " "
CHAR "?"
SYMBOL ","
BLANKS " "
CHAR "\\'"
SYMBOL ","
BLANKS " "
CHAR "\\n"
SYMBOL ","
NEWLINE "\n"
BLANKS "                       "
STRING "string"
SYMBOL ","
BLANKS " "
STRING "\\t\\n\\\"'"
SYMBOL ","
BLANKS " "
STRING "\n"
SYMBOL ","
CHAR "\n"
SYMBOL ")"
NEWLINE "\n"
COMMENT "(* LINE_DIRECTIVE *)"
NEWLINE "\n"
LINE_DIRECTIVE " " "0" "42" "" "" "\n"
LINE_DIRECTIVE " " "0" "42" " " "somefilename.ml" "" "\n"
COMMENT "(* LABEL, OPTLABEL *)"
NEWLINE "\n"
LIDENT "let"
BLANKS " "
LIDENT "f"
BLANKS " "
LIDENT "g"
BLANKS " "
LIDENT "x"
BLANKS " "
LIDENT "y"
BLANKS " "
SYMBOL "="
BLANKS " "
LIDENT "g"
BLANKS " "
LABEL "x"
LIDENT "x"
BLANKS " "
OPTLABEL "y"
LIDENT "y"
NEWLINE "\n"
COMMENT "(* QUOTATION *)"
NEWLINE "\n"
QUOTATION "" "" "2" "foo"
BLANKS " "
QUOTATION "bar" "" "4" "baz"
BLANKS " "
QUOTATION "" "" "2" "foo$bar$baz"
BLANKS " "
QUOTATION "bar" "" "4" "foo$bar$baz"
NEWLINE "\n"
QUOTATION "" "loca" "5" "foo"
BLANKS " "
QUOTATION "expr" "loc" "9" "foo"
BLANKS " "
QUOTATION "" "" "2" "abc<:def<ghi>>klm"
NEWLINE "\n"
COMMENT "(* ANTIQUOT *)"
NEWLINE "\n"
ANTIQUOT "foo" "bar"
BLANKS " "
ANTIQUOT "" "baz"
BLANKS " "
ANTIQUOT "`foo" "bar"
BLANKS " "
ANTIQUOT ".." "bar"
NEWLINE "\n"
LIDENT "caml"
BLANKS " "
ANTIQUOT "" "antiquo << quot $antiquo$ quot >> antiquo"
BLANKS " "
LIDENT "caml"
NEWLINE "\n"
NEWLINE "\n"
COMMENT "(* This is not a quotation *)"
NEWLINE "\n"
LIDENT "caml"
BLANKS " "
ANTIQUOT "" "<< antiquo "
LIDENT "caml"
ANTIQUOT "" " antiquo >>"
BLANKS " "
LIDENT "caml"
NEWLINE "\n"
NEWLINE "\n"
COMMENT "(* NOTE that KEYWORD is never generated by this lexer *)"
NEWLINE "\n"
